package examen.services.parte2;

import java.io.File;
import java.util.List;

import com.fasterxml.jackson.dataformat.xml.XmlMapper;

import examen.dao.EquiposDao;
import examen.modelo.Equipo;
import examen.services.EquipoNotFoundException;
import examen.services.FutbolDbException;
import examen.services.FutbolXmlException;
import examen.services.parte1.FutbolDbServiceImpl;

public class FutbolXmlServiceImpl implements FutbolXmlService  {

	// TODO: En esta clase es donde tienes que implementar tu código
	// TODO: Mira los comentarios escritos en la interfaz FutbolXmlService
	/**  
	 * Este método recibe la ruta completa con el nombre de un fichero XML. El método debe leer el fichero completo para obtener
	 * una lista de Equipos. Cuando la tenga, tendrá que insertar dicha lista en BBDD utilizando el método del servicio
	 * FutbolDbService que ya has implementado anteriormente. 
	 * 
	 * El método devolverá una lista de los equipos insertados con su ID relleno (el ID generado por la BBDD). 
	 * 
	 * Para leer el XML podrás utilizar SAX o DOM. Lo que prefieras.
	 * 
	 * Si hay algún error al leer el XML, tendrás que lanzar FutbolXmlException con un mensaje y el origen de la excepción.
	 * Si hay algún error al abrir la conexión para insertar, tendrás que lanzar FutbolDbException con un mensaje y el origen de la excepción.	 
	 */
	@Override
	public List<Equipo> importarEquipos(String pathFile) throws FutbolXmlException, FutbolDbException {
		
		
		return null;
		
	}
	/** Este método recibe la ruta y nombre completo de un fichero que inicialmente no existe. Este método tiene que 
	 * crear dicho fichero. 
	 * El fichero se creará con todos los datos del equipo que tenga en BBDD el id que recibimos por parámetro. Es decir,
	 * debes consultar el equipo con el ID indicado utilizando el servicio FutbolDbService implementado anteriormente. 
	 * Cuando lo tengas, escribe un XML en la ruta indicada con los datos de ese equipo. Mira el FORMATO del equipo xml
	 * proporcionado en Moodle. 
	 * 
	 * Para escribir el XML tienes que utilizar JACKSON.
	 * 
	 * Si el equipo no existe, tendrás que lanzar EquipoNotFoundException con un mensaje y el origen de la excepción.
	 * Si hay algún error al hacer la consulta, tendrás que lanzar FutbolDbException con un mensaje y el origen de la excepción.	 
	 * Si hay algún error al crear el XML, tendrás que lanzar FutbolXmlException con un mensaje y el origen de la excepción.	 
	 */
	@Override
	public void exportarEquipo(String pathFile, Long idEquipo) throws FutbolXmlException, FutbolDbException, EquipoNotFoundException {
		try {
			File file = new File(pathFile);
			XmlMapper mapper = new XmlMapper();
			FutbolDbServiceImpl fservice = new FutbolDbServiceImpl();
			Equipo equipo1 = fservice.consultarEquipo(idEquipo);
			if(equipo1 != null)){
				mapper.writeValue(file, equipo1);
			}
			
		} catch (Exception e) {
			throw new FutbolXmlException();
		}
	}

}
